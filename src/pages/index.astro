---
import Layout from '../layouts/Layout.astro'

const challenges = [
  {
    title: 'Card Stacks',
    url: '/gui-challenges/card-stack',
    imageURL: '/assets/gui-challenges/card-stacks.png',
  },
  {
    title: 'Comparison Widget',
    url: '/gui-challenges/compare',
    imageURL: '/assets/gui-challenges/comparison-widget.png',
  },
  {
    title: 'Form Pick Lists',
    url: '/gui-challenges/picklists',
    imageURL: '/assets/gui-challenges/picklist.png',
  },
  {
    title: 'Settings',
    url: '/gui-challenges/settings',
    // imageURL: '/assets/gui-challenges/settings.png',
  },
] satisfies { title: string; url: string; imageURL?: string }[]
---

<Layout title='UI Showcases'>
  <main class='dark'>
    <div>
      <h1>UI Showcases</h1>

      <p>
        Here are some examples of web-ui components/concepts that I enjoy and
        want to keep as a reference.
      </p>
    </div>

    <div class='challenges'>
      <!-- {challenges.map(challenge => <Card {...challenge} />)} -->
      {
        challenges.map(card => (
          <a class='card'>
            <div>
              <img
                src={card.imageURL}
                alt={card.title}
                onload='this.classList.add("loaded")'
              />
            </div>
            <p>{card.title}</p>
          </a>
        ))
      }
    </div>
  </main>
</Layout>

<style>
  @import 'open-props/switch/dark' layer(demo.theme);

  @layer demo.support {
    .dark {
      color: var(--text-1);
      gap: var(--size-10);
      padding-inline: var(--size-3);
      padding-inline: max(var(--size-3), env(safe-area-inset-left));
      background: var(--surface-1);
    }
  }

  @layer demo {
    main {
      display: flex;
      flex-direction: column;
      gap: var(--size-3);
      padding: var(--size-3);

      > .challenges {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(min(100%, 250px), 1fr));
        gap: var(--size-3);

        > .card {
          background: var(--surface-2);
          min-height: 200px;
          min-width: 200px;
          display: grid;
          grid-template-rows: 1fr auto;
          padding: var(--size-3);
          border-radius: var(--radius-2);
          gap: var(--size-3);

          > div {
            background: var(--surface-1);
            border-start-start-radius: var(--radius-2);
            border-start-end-radius: var(--radius-2);
            overflow: hidden;
            box-shadow: var(--shadow-2);

            > img {
              width: 100%;
              height: 100%;
              object-fit: cover;
              opacity: 0;
              transition: opacity 1s ease-in-out;

              &.loaded {
                opacity: 1;
                animation: var(--animation-fade-in-bloom) 1s ease-in-out;
              }
            }
          }
          > p {
            margin: 0;
          }
        }
      }
    }

    h1 {
      font-weight: var(--font-weight-6);
      font-size: var(--font-size-6);
      margin: 0;
    }
  }
</style>
